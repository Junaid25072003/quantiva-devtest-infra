AWSTemplateFormatVersion: '2010-09-09'
Description: Dev/Test Infrastructure

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair
    Type: AWS::EC2::KeyPair::KeyName
    Default: cwinkp

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.micro, t2.small, t2.medium]

Resources:
  VPC1:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: VPC1
        - Key: Environment
          Value: Dev

  IGW1:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: IGW1

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC1
      InternetGatewayId: !Ref IGW1

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: Subnet1
        - Key: Environment
          Value: Dev

  RT1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: RT1

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RT1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW1

  RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref RT1

  SG1:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH, HTTP, and RDP access
      VpcId: !Ref VPC1
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: SG1

  WindowInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: ami-040ff3f52a5f9a7bb  # Make sure this is valid for your region
      SubnetId: !Ref Subnet1
      SecurityGroupIds:
        - !Ref SG1
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 30
            VolumeType: gp3
            DeleteOnTermination: true
        - DeviceName: /dev/sdf
          Ebs:
            VolumeSize: 20
            VolumeType: gp2
            DeleteOnTermination: false
      Tags:
        - Key: Name
          Value: WindowInstance
        - Key: Environment
          Value: Dev
        - Key: Owner
          Value: TeamA

  ExampleS3:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub example-s3-${AWS::Region}-${AWS::AccountId}
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: Name
          Value: ExampleS3
        - Key: Environment
          Value: Dev
        - Key: Owner
          Value: TeamA

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC1

  SubnetId:
    Description: Public Subnet ID
    Value: !Ref Subnet1

  EC2InstanceId:
    Description: EC2 Instance ID
    Value: !Ref WindowInstance

  S3BucketName:
    Description: Name of the S3 Bucket
    Value: !Ref ExampleS3
